version: '3.6'

services:

  kolibri-database:
    container_name: kolibri-database
    image: postgres:13
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_INTERNAL_PORT}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - /var/pg/kolibri-db:/var/lib/postgresql/data

  kolibri-api:
    build:
      context: .
      dockerfile: kolibri-api/.dockerfile
    container_name: kolibri-api
    image: kolibri-api
    ports:
      - 1100:1100
    volumes:
      - /var/log:/var/log
    env_file:
      - ./kolibri-api/.env
    command: java -jar app.jar

  kolibri-scheduler:
    build:
      context: .
      dockerfile: kolibri-scheduler/.dockerfile
    container_name: kolibri-scheduler
    image: kolibri-scheduler
    volumes:
      - /var/log:/var/log
    env_file:
      - ./kolibri-scheduler/.env
    command: java -jar app.jar

  kolibri-commandline-utility:
    build:
      context: .
      dockerfile: kolibri-commandline-utility/.dockerfile
    container_name: kolibri-commandline-utility
    image: kolibri-commandline-utility
    volumes:
      - /var/log:/var/log
    env_file:
      - ./kolibri-commandline-utility/.env
    command: java -jar app.jar

  proxy:
    container_name: proxy
    image: nginx:1.17.10
    ports:
      - ${TELEGRAM_BOT_HTTP_PORT}:${TELEGRAM_BOT_HTTP_PORT}
      - ${TELEGRAM_BOT_HTTPS_PORT}:${TELEGRAM_BOT_HTTPS_PORT}
      - ${TELEGRAM_PROXY_PORT}:${TELEGRAM_PROXY_PORT}
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/fullchain.pem:/etc/ssl/certs/fullchain.pem:ro
      - ./proxy/privkey.pem:/etc/ssl/private/privkey.pem:ro
    command: nginx -g 'daemon off;'

networks:
  default:
    name: kolibri-network
